{"version":3,"sources":["index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","userRef","firestore","collection","dragSrcInd","User","props","state","name","user","displayName","email","photoUrl","photoURL","uid","loaded","items","listName","type","getUserRankings","this","thisUser","doc","get","then","exists","ranking","data","console","log","toString","setState","set","alert","prompt","split","catch","error","RankingList","userEmail","React","Component","draggingOn","newItems","newItem","push","renderedItems","entries","index","value","RankedItem","item","list","className","id","onClick","handleAdd","handleSave","itemNum","key","handleChange","bind","handleSubmit","event","val","target","intVal","parseInt","isNaN","preventDefault","destNum","length","savedItem","splice","rankChange","forceUpdate","document","querySelectorAll","draggable","onDragStart","e","style","opacity","dataTransfer","effectAllowed","setData","innerHTML","onDragLeave","classList","remove","onDragOver","dropEffect","onDragEnter","add","onDragEnd","forEach","onDrop","stopPropagation","movedItem","onSubmit","onChange","handleRemove","auth","App","useAuthState","UserInfo","currentUser","SignIn","SignOut","provider","GoogleAuthProvider","signInWithPopup","signOut","firstName","src","alt","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7b103222.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\n// import { useCollectionData } from 'react-firebase-hooks/firestore';\n// import { findRenderedDOMComponentWithClass } from 'react-dom/test-utils';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBblldZeCvHZy5fDfTzxgTWPYoT568KCzQ\",\n  authDomain: \"rankr-15271.firebaseapp.com\",\n  databaseURL: \"https://rankr-15271-default-rtdb.firebaseio.com\",\n  projectId: \"rankr-15271\",\n  storageBucket: \"rankr-15271.appspot.com\",\n  messagingSenderId: \"548038535110\",\n  appId: \"1:548038535110:web:d0855f7184b33be75474c7\",\n  measurementId: \"G-3WXSLX7RJV\"\n})\n\n  // =========Rank Engine====================\n\n  // const DEFAULT_ITEMS = [\"KING'S DEAD\", \"FUCK YOU\"]\n\n  const db = firebase.firestore();\n  const userRef = db.collection(\"users\");\n  var dragSrcInd = null;\n\n  /** Definition of a User */\n  class User extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        name: props.user.displayName,\n        email: props.user.email,\n        photoUrl: props.user.photoURL,\n        uid: props.user.uid,\n        loaded: false,\n        items: [],\n        listName: '',\n        type: ''\n      }\n\n      this.getUserRankings();\n    }\n\n    toString() {\n      return (\"Name: \" + this.state.name);\n    }\n\n    /** Customizes the rankings to those picked by the user. */\n    getUserRankings() {\n      let thisUser = this;\n\n      let rankRef = userRef.doc(this.state.email).collection('rankings');\n\n      rankRef.doc('taylor')\n      .get().then(function(doc) {\n        if (doc.exists){\n          // Convert to City object\n          let ranking = doc.data();\n          // Use a City instance method\n          console.log(thisUser.toString());\n          thisUser.setState({items: ranking.items, loaded: true, \n            listName: ranking.displayName, type: ranking.type});\n          console.log(ranking.displayName);\n        } else {\n          console.log('Got Here');\n          userRef.doc(thisUser.state.email).set({name: thisUser.state.name}).then(alert('New Account Made!'));\n          userRef.doc(thisUser.state.email).collection('rankings').doc('taylor').set({\n            displayName: 'Taylor Swift',\n            items: prompt('Enter your top 3 taylor Swift separated by a comma followed by a space: e.g. Style, Clean').split(\", \"),\n            type: 'music'\n          });\n          thisUser.getUserRankings();\n        }}).catch(function(error) {\n          console.log(\"Error getting document:\", error);\n        });\n    }\n\n    render() {\n      const items = this.state.items;\n      return (this.state.loaded ? <RankingList items={items} listName={this.state.listName} \n        userEmail={this.state.email} type={this.state.type} /> \n        : <p>Loading Element...</p>)\n    }\n  }\n\n//   var userConverter = {\n//     toFirestore: function(user) {\n//         return {\n//             name: user.name,\n//             items: user.items\n//             };\n//     },\n//     fromFirestore: function(snapshot, options){\n//         const data = snapshot.data(options);\n//         return new User(data.name, data.items);\n//     }\n// };\n\n  /** Basic Ranking List with changeable Rankings */\n  class RankingList extends React.Component {\n    /** Constructor for the Ranked List, loads data. */\n    constructor(props) {\n      super(props);\n      \n      this.state = {\n        items: props.items,\n        userEmail: props.userEmail,\n        draggingOn: false,\n      }\n    }\n\n    /** Uses a prompt to add an item to the end of the list */\n    handleAdd() {\n      let newItems = this.state.items;\n      let newItem = prompt(\"What item would you like to add?\");\n      // this.draggingEngine(this, false);\n      if (newItem !== '' && newItem !== null){\n        newItems.push(newItem);\n        this.setState({items: newItems, draggingOn: false});\n      }\n    }\n\n    /** Saves the updated rankings to the user's profile. */\n    handleSave() {\n      let rankRef = userRef.doc(this.state.userEmail).collection('rankings');\n      rankRef.doc('taylor')\n        .set({\n          displayName: this.props.listName,\n          items: this.state.items,\n          type: this.props.type\n        }).then(alert(\"Saved!\"))\n    }\n\n    /** Renders the ranked list in order of the saved data. */\n    render() {\n      \n      const renderedItems = [];\n      const items = this.state.items;\n\n      for (const [index, value] of items.entries()) {\n        renderedItems.push(<RankedItem \n          index = {index}\n          key = {\"item\" + index}\n          item = {value}\n          list = {this}\n        />)\n      }\n\n      return (\n        <div>\n          <h4>{this.props.listName}</h4>\n          <ol className='list'>\n            {renderedItems}\n          </ol>\n          <button id=\"add\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Add Item</button>\n          <button id=\"save\" className=\"btn btn-warning\" onClick={() => this.handleSave()}>Save List</button>\n        </div>\n      )\n    }\n  }\n\n  /** Handles the input for changing the rank of an item. */\n  class RankedItem extends React.Component {\n\n    /** Constructor for the input field and text of each list item. */\n    constructor(props) {\n      super(props);\n      this.state = {\n        value: '',\n        itemNum: props.index,\n        key: 'item' + props.index,\n      };\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    /** Handles the input of text in the input secton of the list item. */\n    handleChange(event) {\n      const val = event.target.value;\n      var intVal = parseInt(val, 10);\n      if (isNaN(intVal) && val !== '') {\n        return\n      }\n      if (val === '') {\n        this.setState({value: val})\n      } else {\n        this.setState({value: intVal});\n      }\n    }\n  \n    /** Handles the event when the user submits an updated ranking for an item/ */\n    handleSubmit(event) {\n      event.preventDefault();\n      rankChange(this.props.list, this.state.itemNum, this.state.value);\n      this.setState({value: ''});\n      this.props.list.forceUpdate();\n    }\n\n    /** Handles the removal of an item. */\n    handleRemove(index) {\n      let list = this.props.list;\n      console.log(index);\n      console.log(list.state.items);\n      list.state.items.splice(index, 1)\n      list.forceUpdate();\n    }\n  \n    /** Renders the ranked item on the screen */\n    render() {\n\n      let list = this.props.list;\n\n      // var dragSrcInd = null;\n      \n      function handleDragStart(e) {\n        e.target.style.opacity = '0.4';\n        dragSrcInd = e.target.id;\n  \n        e.dataTransfer.effectAllowed = 'move';\n        e.dataTransfer.setData('text/html', e.target.innerHTML);\n      }\n  \n      function handleDragOver(e) {\n        if (e.preventDefault) {\n          e.preventDefault();\n        }\n  \n        e.target.style.opacity = '.'\n        e.dataTransfer.dropEffect = 'move';\n        \n        return false;\n      }\n  \n      function handleDragEnter(e) {\n        e.target.classList.add('over');\n      }\n  \n      function handleDragLeave(e) {\n        e.target.classList.remove('over');\n      }\n  \n      function handleDrop(e) {\n        if (e.stopPropagation) {\n          e.stopPropagation(); // stops the browser from redirecting.\n        }\n        \n        if (dragSrcInd !== e.target.id) {\n          let movedItem = list.state.items.splice(dragSrcInd, 1)[0];\n          list.state.items.splice(e.target.id, 0, movedItem);\n          list.forceUpdate();\n        }\n        \n        return false;\n      }\n  \n      function handleDragEnd(e) {\n        e.target.style.opacity = '1';\n        // console.log(this.innerHTML);\n        \n        items.forEach(function (item) {\n          item.classList.remove('over');\n        });\n      }\n      \n      let items = document.querySelectorAll('.item');\n\n      return (\n        <li key={this.state.key} className=\"item\" id={this.state.itemNum} draggable = \"true\" \n        onDragStart={handleDragStart} onDragLeave={handleDragLeave} onDragOver={handleDragOver}\n        onDragEnter={handleDragEnter} onDragEnd={handleDragEnd} onDrop={handleDrop}>\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              <input type=\"text\" className=\"form-control\" value={this.state.value} onChange={this.handleChange} />\n            </label>\n            <label id=\"name\">\n              <span className='item-name' id={this.state.itemNum}>&nbsp;&nbsp;{this.props.item}&nbsp;&nbsp;</span>\n            </label>\n             {/* {this.props.value} */}\n            <input type=\"submit\" className=\"btn btn-info\" value=\"Submit\" />\n            <input type=\"button\" className=\"btn btn-success\" onClick={() => this.handleRemove(this.state.itemNum)} value=\"Remove Item\" />\n          </form>\n        </li>\n      );\n    }\n  }\n\n  /** Function that changes the order of the list items. */\n  function rankChange(list, itemNum, destNum) {\n    \n    let items = list.state.items;\n\n    if (destNum >= items.length) {\n      destNum = items.length;\n    }\n\n    destNum -= 1;\n\n    const savedItem = items[itemNum];\n    items.splice(itemNum, 1);\n\n    items.splice(destNum, 0, savedItem);\n\n    list.state.items = items;\n\n  }\n\n  // ============Sign in and Users===========\n\n  const auth = firebase.auth();\n  \n  /** The rankr App itself */\n  function App() {\n\n    const [user] = useAuthState(auth);\n  \n    return (\n      <div className=\"App\">\n        <div className=\"row\" id='user-info-rankings'>\n        \n          <section id='user-info' className='col-md-2'>\n\n            {user ? <UserInfo /> : null}\n          \n          </section>\n\n          <section id='rankings' className='col-md-10'>\n\n            {user ? <User user={auth.currentUser} /> : <SignIn />}\n\n          </section>\n      \n        </div>\n\n        <section id='action-buttons'>\n\n          {user ? <SignOut /> : <p></p>}\n\n        </section>\n\n      </div>\n    );\n  }\n\n  /** Sign in Button Functionality */\n  function SignIn() {\n\n    const signInWithGoogle = () => {\n      const provider = new firebase.auth.GoogleAuthProvider();\n\n      /** @source FIREBASE API REFERENCE */ \n      firebase.auth()\n        .signInWithPopup(provider)\n        // .then((result) => {\n        //   /** @type {firebase.auth.OAuthCredential} */\n        //   var credential = result.credential;\n\n        //   // Gets a Google Access Token\n        //   var token = credential.accessToken;\n        //   // The signed-in user info.\n        //   var user = result.user;\n        //   // ...\n        // }).catch((error) => {\n        //   // Handle Errors here.\n        //   var errorCode = error.code;\n        //   var errorMessage = error.message;\n        //   // The email of the user's account used.\n        //   var email = error.email;\n        //   // The firebase.auth.AuthCredential type that was used.\n        //   var credential = error.credential;\n        //   // ...\n        // });\n    }\n  \n    return (\n      <button className=\"btn btn-primary\" onClick={signInWithGoogle}>Sign in with Google</button>\n    )\n  \n  }\n  \n  /** Sign Out Button Functionality */\n  function SignOut() {\n    // globalItems = DEFAULT_ITEMS;\n    return auth.currentUser && (\n      <button className=\"btn btn-danger\" onClick={() => auth.signOut()}>Sign Out</button>\n    )\n  }\n\n  /** User Identifier */\n  function UserInfo() {\n    const { displayName, photoURL } = auth.currentUser;\n    const firstName = displayName.split(\" \")[0];\n    return (\n      <div id=\"user-info\">\n        <img src={photoURL} alt='Profile'/><br />\n        <p className=\"user-info\">Name: {firstName}</p>\n        <p className=\"user-info\">Number of Rankings: 1</p>\n      </div>\n    )\n  }\n\n\n  \n  // =============Page Rendering=============\n  \n  ReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  );\n  \n  "],"sourceRoot":""}